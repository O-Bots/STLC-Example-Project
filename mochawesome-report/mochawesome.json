{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-17T14:19:55.374Z",
    "end": "2024-10-17T14:20:00.027Z",
    "duration": 4653,
    "testsRegistered": 9,
    "passPercent": 11.11111111111111,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "c00feb7d-abc8-4975-93d0-a5c57fc8ef7c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0727703e-7d49-4983-9d78-9f0c541a6aec",
          "title": "Tests_for_account_functionality",
          "fullFile": "C:\\Users\\Okechi\\Desktop\\Javascript\\Projects\\STLC Example Project\\tests\\selenium\\accountFunctionality.js",
          "file": "\\tests\\selenium\\accountFunctionality.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Tests_for_account_functionality \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch a blank Chrome browser\ndriver = await new Builder().forBrowser(Browser.CHROME).build();\n//Moves browser window \nawait driver.manage().window().setRect({x: 10, y: -1440 });\n\n//Navigate to website\nawait driver.get('https://magento.softwaretestingboard.com/');",
              "err": {},
              "uuid": "338de79c-48ec-40ee-8057-f005b9bf8bd5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfully creates an account",
              "fullTitle": "Tests_for_account_functionality Successfully creates an account",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[3]')).click();\nlet currentUrl = await driver.getCurrentUrl();\n//Chai assert to verify the page is correct\nexpect(currentUrl).to.contain(\"account/create/\");\n//Enter account information\nawait driver.findElement(By.id('firstname')).sendKeys(person.firstName);\nawait driver.findElement(By.id('lastname')).sendKeys(person.lastName);\nawait driver.findElement(By.id('email_address')).sendKeys(person.email);\nawait driver.findElement(By.id('password')).sendKeys(person.password);\nconsole.log(person.password);\n\nawait driver.findElement(By.id('password-confirmation')).sendKeys(person.password);\n//Add the account details to the report\naddContext(this, {\n    title: \"Account information used\",\n    value: {\n        firstName: person.firstName,\n        lastName: person.lastName,\n        email: person.email,\n        password: person.password\n    }\n});\n\n//Submit new account information\nawait driver.findElement(By.xpath(\"//button[@class='action submit primary']\")).click();\n//Verify account has been created\nlet accountName = await driver.findElement(By.xpath(\"//div[@class='box-content']/p\")).getText();\nexpect(accountName).to.contain(person.firstName);\nexpect(accountName).to.contain(person.lastName);\nexpect(accountName).to.contain(person.email);",
              "err": {},
              "uuid": "74b71f63-d553-49ef-bb96-c223e5291977",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Unable to create an account with missing information",
              "fullTitle": "Tests_for_account_functionality Unable to create an account with missing information",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[3]')).click();\nlet currentUrl = await driver.getCurrentUrl();\n//Chai assert to verify the page is correct\nexpect(currentUrl).to.contain(\"account/create/\");\n//Enter account information\nawait driver.findElement(By.id('firstname')).sendKeys(person2.firstName);\n// await driver.findElement(By.id('lastname')).sendKeys(person2.lastName);\nawait driver.findElement(By.id('email_address')).sendKeys(person2.email);\nawait driver.findElement(By.id('password')).sendKeys(person2.password);\nawait driver.findElement(By.id('password-confirmation')).sendKeys(person2.password);\n//Submit new account information\nawait driver.findElement(By.xpath(\"//button[@class='action submit primary']\")).click();\n//Chai assert for required info error\nconst requiredErr = await driver.findElement(By.xpath(\"//div[@class='mage-error']\")).isDisplayed();\nexpect(requiredErr).to.equal(true);",
              "err": {},
              "uuid": "ec746c93-135d-49d0-affe-a8bb1a3ddeb3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Unable to create an account with passwords that dont match",
              "fullTitle": "Tests_for_account_functionality Unable to create an account with passwords that dont match",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[3]')).click();\nlet currentUrl = await driver.getCurrentUrl();\n//Chai assert to verify the page is correct\nexpect(currentUrl).to.contain(\"account/create/\");\n//Enter account information\nawait driver.findElement(By.id('firstname')).sendKeys(person2.firstName);\nawait driver.findElement(By.id('lastname')).sendKeys(person2.lastName);\nawait driver.findElement(By.id('email_address')).sendKeys(person2.email);\nawait driver.findElement(By.id('password')).sendKeys(person2.password);\nawait driver.findElement(By.id('password-confirmation')).sendKeys(person2.password+1);\n//Submit new account information\nawait driver.findElement(By.xpath(\"//button[@class='action submit primary']\")).click();\n//Chai assert for password error\nconst passwordErr = await driver.findElement(By.xpath(\"//div[@id='password-confirmation-error']\")).isDisplayed();\nexpect(passwordErr).to.equal(true);",
              "err": {},
              "uuid": "da62f9df-4699-4632-b2a0-9451035a2db7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Unable to create an account with an already registered email",
              "fullTitle": "Tests_for_account_functionality Unable to create an account with an already registered email",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[3]')).click();\nlet currentUrl = await driver.getCurrentUrl();\n//Chai assert to verify the page is correct\nexpect(currentUrl).to.contain(\"account/create/\");\n//Enter account information\nawait driver.findElement(By.id('firstname')).sendKeys(person.firstName);\nawait driver.findElement(By.id('lastname')).sendKeys(person.lastName);\nawait driver.findElement(By.id('email_address')).sendKeys(person.email);\nawait driver.findElement(By.id('password')).sendKeys(person.password);\nawait driver.findElement(By.id('password-confirmation')).sendKeys(person.password);\n//Submit new account information\nawait driver.findElement(By.xpath(\"//button[@class='action submit primary']\")).click();\n//Chai assert for email error\nconst emailErr = await driver.findElement(By.xpath(\"//div[@class='page messages']\")).isDisplayed();\nexpect(emailErr).to.equal(true);",
              "err": {},
              "uuid": "98938283-9c33-4ff1-a85a-9af44c582a1f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Successfully login with the correct email/password to a previously created account",
              "fullTitle": "Tests_for_account_functionality Successfully login with the correct email/password to a previously created account",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[2]')).click();\n//Chai assert to verify the page is correct\nconst loginPageCheck = await driver.findElement(By.xpath('//h1[@class=\"page-title\"]/span[@class=\"base\"]')).getText();\nexpect(loginPageCheck).to.contain(\"Customer Login\");\n//Enter login information\nawait driver.findElement(By.id('email')).sendKeys(person.email);\nawait driver.findElement(By.id('pass')).sendKeys(person.password);\n\n//Submit login information\nawait driver.findElement(By.xpath(\"//button[@class='action login primary']\")).click();\n\n//Navigate to account information\nawait driver.findElement(By.xpath(\"//button[@class='action switch']\")).click();\nawait driver.findElement(By.xpath(\"//div[@class='customer-menu']/ul/li[1]\")).click();\n\nlet currentUrl = await driver.getCurrentUrl();\n\n//Chai assert to verify the page is correct\nexpect(currentUrl).to.contain(\"customer/account/\");\n\nlet accountInformation = await driver.findElement(By.xpath(\"//div[@class='box-content']/p\")).getText();\nexpect(accountInformation).to.contain(person.email);\nexpect(accountInformation).to.contain(person.firstName);\nexpect(accountInformation).to.contain(person.lastName);",
              "err": {},
              "uuid": "afc24d72-c788-4c1c-bcf1-7aa042c2c743",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Unable to login with the incorrect email and correct password to a previously created account",
              "fullTitle": "Tests_for_account_functionality Unable to login with the incorrect email and correct password to a previously created account",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[2]')).click();\n//Chai assert to verify the page is correct\nconst loginPageCheck = await driver.findElement(By.xpath('//h1[@class=\"page-title\"]/span[@class=\"base\"]')).getText();\nexpect(loginPageCheck).to.contain(\"Customer Login\");\n//Enter login information\nawait driver.findElement(By.id('email')).sendKeys(person2.email);\nawait driver.findElement(By.id('pass')).sendKeys(person.password);\n//Submit login information\nawait driver.findElement(By.xpath(\"//button[@class='action login primary']\")).click();\n//Verify sign-in error\nconst logingErr = await driver.findElement(By.xpath(\"//div[@class='page messages']\")).isDisplayed();\nexpect(logingErr).to.equal(true);",
              "err": {},
              "uuid": "cf57f0cb-2f06-4bfa-ae53-ec301195d6b3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Unable to login with the correct email and incorrect password to a previously created account",
              "fullTitle": "Tests_for_account_functionality Unable to login with the correct email and incorrect password to a previously created account",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[2]')).click();\n//Chai assert to verify the page is correct\nconst loginPageCheck = await driver.findElement(By.xpath('//h1[@class=\"page-title\"]/span[@class=\"base\"]')).getText();\nexpect(loginPageCheck).to.contain(\"Customer Login\");\n//Enter login information\nawait driver.findElement(By.id('email')).sendKeys(person.email);\nawait driver.findElement(By.id('pass')).sendKeys(person2.password);\n//Submit login information\nawait driver.findElement(By.xpath(\"//button[@class='action login primary']\")).click();\n//Verify sign-in error\nconst logingErr = await driver.findElement(By.xpath(\"//div[@class='page messages']\")).isDisplayed();\nexpect(logingErr).to.equal(true);",
              "err": {},
              "uuid": "df2ce1a6-80c2-4723-9b21-4257a124f158",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Unable to login with the incorrect email/password to a previously created account",
              "fullTitle": "Tests_for_account_functionality Unable to login with the incorrect email/password to a previously created account",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath('//div[@class=\"panel header\"]/ul/li[2]')).click();\n//Chai assert to verify the page is correct\nconst loginPageCheck = await driver.findElement(By.xpath('//h1[@class=\"page-title\"]/span[@class=\"base\"]')).getText();\nexpect(loginPageCheck).to.contain(\"Customer Login\");\n//Enter login information\nawait driver.findElement(By.id('email')).sendKeys(person2.email);\nawait driver.findElement(By.id('pass')).sendKeys(person2.password);\n//Submit login information\nawait driver.findElement(By.xpath(\"//button[@class='action login primary']\")).click();\n//Verify sign-in error\nconst logingErr = await driver.findElement(By.xpath(\"//div[@class='page messages']\")).isDisplayed();\nexpect(logingErr).to.equal(true);",
              "err": {},
              "uuid": "fdcbeb98-b7c3-471a-88f3-35c018d076e5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "74b71f63-d553-49ef-bb96-c223e5291977",
            "ec746c93-135d-49d0-affe-a8bb1a3ddeb3",
            "da62f9df-4699-4632-b2a0-9451035a2db7",
            "98938283-9c33-4ff1-a85a-9af44c582a1f",
            "afc24d72-c788-4c1c-bcf1-7aa042c2c743",
            "cf57f0cb-2f06-4bfa-ae53-ec301195d6b3",
            "df2ce1a6-80c2-4723-9b21-4257a124f158",
            "fdcbeb98-b7c3-471a-88f3-35c018d076e5"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "57e45779-2942-45b8-84fb-f4951bbc80ca",
          "title": "Tests_for_website_functionality",
          "fullFile": "C:\\Users\\Okechi\\Desktop\\Javascript\\Projects\\STLC Example Project\\tests\\selenium\\websiteFunctionality.js",
          "file": "\\tests\\selenium\\websiteFunctionality.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Tests_for_website_functionality\"",
              "fullTitle": "Tests_for_website_functionality \"before each\" hook in \"Tests_for_website_functionality\"",
              "timedOut": false,
              "duration": 2878,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch a blank Chrome browser\ndriver = await new Builder().forBrowser(Browser.CHROME).build();\n//Moves browser window \nawait driver.manage().window().setRect({x: 10, y: -1440 });\n\n//Navigate to website\nawait driver.get('https://magento.softwaretestingboard.com/');",
              "err": {},
              "uuid": "deaf80ce-7ff8-4ce4-bff1-fd8aef0e6a3f",
              "parentUUID": "57e45779-2942-45b8-84fb-f4951bbc80ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Navigates to the category page correctly",
              "fullTitle": "Tests_for_website_functionality Navigates to the category page correctly",
              "timedOut": false,
              "duration": 1771,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Navigate to a product catagory\nconst categoryhover = driver.findElement(By.xpath(\"//span[.='Women']\"));\nconst subcategoryhover = driver.findElement(By.xpath(\"//span[.='Tops']\"));\nconst actions = driver.actions({async: true})\n//Click subcategory\nawait actions.move({origin: categoryhover}).press().perform();\nawait actions.move({origin: subcategoryhover}).press().perform();\n\nconst subCategoryName = await driver.findElement(By.xpath(\"//span[.='Jackets']\")).getText();\nawait driver.findElement(By.xpath(\"//span[.='Jackets']\")).click();\nconst pageCategory = await driver.findElement(By.xpath(\"//span[@class='base']\")).getText();\nexpect(subCategoryName).to.equal(pageCategory);",
              "err": {},
              "uuid": "8c4994a6-d610-42ae-8ae4-d9bc1cae6799",
              "parentUUID": "57e45779-2942-45b8-84fb-f4951bbc80ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c4994a6-d610-42ae-8ae4-d9bc1cae6799"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1771,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}